import json
import uuid
from datetime import datetime
import boto3

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('Todos')  

# Common headers for all responses
headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'OPTIONS,POST,GET,DELETE',
    'X-Content-Type-Options': 'nosniff',
    'Cache-Control': 'no-store',
    'Content-Type': 'application/json'
}

def lambda_handler(event, context):
    method = event['requestContext']['http']['method']

    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': headers,
            'body': ''
        }

    elif method == 'POST':
        body = json.loads(event.get('body', '{}'))
        todo_id = str(uuid.uuid4())
        title = body.get('title', '')
        description = body.get('description', '')
        created_at = datetime.utcnow().isoformat()

        item = {
            'id': todo_id,
            'title': title,
            'description': description,
            'createdAt': created_at
        }

        table.put_item(Item=item)

        return {
            'statusCode': 201,
            'headers': headers,
            'body': json.dumps({'message': 'ToDo created', 'item': item})
        }

    elif method == 'GET':
        response = table.scan()
        items = response.get('Items', [])

        return {
            'statusCode': 200,
            'headers': headers,
            'body': json.dumps({'todos': items})
        }

    elif method == 'DELETE':
        todo_id = event.get('pathParameters', {}).get('id')

        if not todo_id:
            return {
                'statusCode': 400,
                'headers': headers,
                'body': json.dumps({'error': 'Missing ToDo ID'})
            }

        table.delete_item(Key={'id': todo_id})

        return {
            'statusCode': 200,
            'headers': headers,
            'body': json.dumps({'message': f'ToDo with id "{todo_id}" deleted'})
        }

    else:
        return {
            'statusCode': 405,
            'headers': headers,
            'body': json.dumps({'error': 'Method not allowed'})
        }
